(use-modules (aiscm element)
             (aiscm bool)
             (oop goops)
             (guile-tap))
(define bool-false (make-bool #f))
(define bool-true (make-bool #t))
(planned-tests 13)
(ok (equal? bool-false bool-false)
  "equal boolean objects")
(ok (not (get-value bool-false))
  "get boolean value from bool-false")
(ok (get-value bool-true)
  "get boolean value from bool-true")
(ok (not (equal? bool-true bool-false))
  "unequal boolean objects")
(ok (eqv? 1 (storage-size <bool>))
  "storage size of booleans")
(ok (equal? #vu8(0) (pack bool-false))
  "pack 'false' value")
(ok (equal? #vu8(1) (pack bool-true))
  "pack 'true' value")
(ok (eqv? 1 (size bool-true))
  "querying element size of boolean")
(ok (equal? bool-false (unpack <bool> #vu8(0)))
  "unpack 'false' value")
(ok (equal? bool-true (unpack <bool> #vu8(1)))
  "unpack 'true' value")
(ok (equal? bool-true (subst bool-true '()))
  "ignores substitutions")
(ok (equal? "#<<bool> #f>"
  (call-with-output-string (lambda (port) (display bool-false port))))
  "display boolean object")
(ok (equal? "#<<bool> #f>"
  (call-with-output-string (lambda (port) (write bool-false port))))
  "write boolean object")
(format #t "~&")
