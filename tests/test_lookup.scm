(use-modules (aiscm element)
             (aiscm lookup)
             (aiscm mem)
             (aiscm pointer)
             (aiscm var)
             (aiscm int)
             (oop goops)
             (guile-tap))
(define m (make <mem> #:size 8))
(define p (make (pointer <ubyte>) #:value m))
(define v (make <var>))
(define l (make <lookup> #:value p #:var v #:stride 2))
(planned-tests 7)
(ok (equal? p (get-value l))
  "query value of lookup object")
(ok (eq? v (get-var l))
  "query variable of lookup object")
(ok (eqv? 2 (get-stride l))
  "query stride of lookup object")
(ok (equal? l (lookup p v 2))
  "lookup with variable")
(ok (equal? (+ p 2) (subst l (list (cons v 1))))
  "substituting variable in a lookup object")
(ok (equal? (lookup (+ p 2) v 2) (shift l v 1))
  "skipping values with a lookup object")
(skip #t '((ok (throws? (shift l (make <var>) 1))
             "skip with unknown variable name"))
  "needs test with two lookup objects")
(format #t "~&")
