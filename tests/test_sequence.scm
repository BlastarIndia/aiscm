(use-modules (aiscm sequence)
             (aiscm element)
             (aiscm lambda)
             (aiscm int)
             (guile-tap))
(define s (make-sequence <sint> 3))
(planned-tests 6)
(ok (equal? <sint> (typecode s))
  "query element type of sequence")
(ok (eqv? 3 (size s))
  "query size of sequence")
(ok (equal? '(3) (shape s))
  "query shape of sequence")
(ok (equal? 9 (begin (set s 2 9) (get s 2)))
  "write value to sequence")
(ok (equal? '(2 3 5)
      (begin (set s 0 2) (set s 1 3) (set s 2 5)
             (sequence->list s))))
(ok (equal? 9 (set s 2 9))
  "write value returns input value")
(format #t "~&")
