(define-module (aiscm bool)
  #:use-module (oop goops)
  #:use-module (rnrs bytevectors)
  #:use-module (aiscm element)
  #:export (<bool>
            <meta<bool>>
            make-bool))
(define-class <meta<bool>> (<class>))
(define-class <bool> (<element>) #:metaclass <meta<bool>>)
(define-method (storage-size (self <meta<bool>>)) 1)
(define (make-bool value)
  (make <bool> #:value value))
(define-method (equal? (a <bool>) (b <bool>))
  (equal? (get-value a) (get-value b)))
(define-method (pack (self <bool>))
  (u8-list->bytevector (list (if (get-value self) 1 0))))
(define-method (unpack (self <meta<bool>>) (packed <bytevector>))
  (make-bool (if (eq? (car (bytevector->u8-list packed)) 0) #f #t)))
